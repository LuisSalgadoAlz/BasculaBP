import{r as u,ad as j,ae as F,af as G,ag as U,ah as L,ai as V,aj as J,ak as K,al as q,am as H,an as X,U as g,a as y}from"./index-DqpGZtZS.js";import{a as Y}from"./regex-DItgc77W.js";function N(){var e=u.useRef(!1);return j(function(){return e.current=!0,function(){e.current=!1}},[]),e}function Q(){var e=N(),n=F(u.useState(0),2),r=n[0],i=n[1],t=u.useCallback(function(){e.current&&i(r+1)},[r]),a=u.useCallback(function(){return G.postRender(t)},[t]);return[a,r]}var x=function(e){var n=e.children,r=e.initial,i=e.isPresent,t=e.onExitComplete,a=e.custom,d=e.presenceAffectsLayout,s=U(W),o=L(),w=u.useMemo(function(){return{id:o,initial:r,isPresent:i,custom:a,onExitComplete:function(h){var p,b;s.set(h,!0);try{for(var E=V(s.values()),c=E.next();!c.done;c=E.next()){var l=c.value;if(!l)return}}catch(T){p={error:T}}finally{try{c&&!c.done&&(b=E.return)&&b.call(E)}finally{if(p)throw p.error}}t==null||t()},register:function(h){return s.set(h,!1),function(){return s.delete(h)}}}},d?void 0:[i]);return u.useMemo(function(){s.forEach(function(h,p){return s.set(p,!1)})},[i]),u.useEffect(function(){!i&&!s.size&&(t==null||t())},[i]),u.createElement(J.Provider,{value:w},n)};function W(){return new Map}var k=function(e){return e.key||""};function Z(e,n){e.forEach(function(r){var i=k(r);n.set(i,r)})}function _(e){var n=[];return u.Children.forEach(e,function(r){u.isValidElement(r)&&n.push(r)}),n}var re=function(e){var n=e.children,r=e.custom,i=e.initial,t=i===void 0?!0:i,a=e.onExitComplete,d=e.exitBeforeEnter,s=e.presenceAffectsLayout,o=s===void 0?!0:s,w=F(Q(),1),h=w[0],p=u.useContext(K).forceRender;p&&(h=p);var b=N(),E=_(n),c=E,l=new Set,T=u.useRef(c),C=u.useRef(new Map).current,$=u.useRef(!0);if(j(function(){$.current=!1,Z(E,C),T.current=c}),q(function(){$.current=!0,C.clear(),l.clear()}),$.current)return u.createElement(u.Fragment,null,c.map(function(P){return u.createElement(x,{key:k(P),isPresent:!0,initial:t?void 0:!1,presenceAffectsLayout:o},P)}));c=H([],F(c),!1);for(var O=T.current.map(k),v=E.map(k),S=O.length,M=0;M<S;M++){var A=O[M];v.indexOf(A)===-1&&l.add(A)}return d&&l.size&&(c=[]),l.forEach(function(P){if(v.indexOf(P)===-1){var D=C.get(P);if(D){var I=O.indexOf(P),f=function(){C.delete(P),l.delete(P);var z=T.current.findIndex(function(R){return R.key===P});if(T.current.splice(z,1),!l.size){if(T.current=E,b.current===!1)return;h(),a&&a()}};c.splice(I,0,u.createElement(x,{key:k(D),isPresent:!1,onExitComplete:f,custom:r,presenceAffectsLayout:o},D))}}}),c=c.map(function(P){var D=P.key;return l.has(D)?P:u.createElement(x,{key:k(P),isPresent:!0,presenceAffectsLayout:o},P)}),X!=="production"&&d&&c.length>1&&console.warn("You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour."),u.createElement(u.Fragment,null,l.size?c:c.map(function(P){return u.cloneElement(P)}))};const ne=async(e,n,r,i,t,a)=>{try{const d=await fetch(`${g}boletas?tipo=${e}&placa=${n}&socio=${r}&empresa=${i}&motorista=${t}`,{method:"GET",headers:{Authorization:y.get("token")}});if(!d.ok)throw new Error("Error en la respuesta de la API");const s=await d.json();a(o=>({...o,...s}))}catch(d){console.error("Error al obtener los clientes:",d)}},te=async(e,n)=>{try{n(!0);const r=await fetch(`${g}boletas/newPlaca`,{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json",Authorization:y.get("token")}});if(!r.ok)throw new Error("Error en la respuesta de la API");return await r.json()}catch(r){console.error("Error al obtener los datos:",r)}finally{n(!1)}},ie=async(e,n,r,i,t)=>{try{n(!0);const a=await fetch(`${g}boletas/data?search=${r}&searchDate=${i}&page=${t}`,{method:"GET",headers:{Authorization:y.get("token")}});if(!a.ok)throw new Error("Error en la respuesta de la API");const d=await a.json();e(d)}catch(a){console.error("Error al obtener los clientes:",a)}finally{n(!1)}},ae=async(e,n,r,i,t)=>{try{n(!0);const a=await fetch(`${g}boletas/data/completadas?search=${r}&searchDate=${i}&page=${t}`,{method:"GET",headers:{Authorization:y.get("token")}});if(!a.ok)throw new Error("Error en la respuesta de la API");const d=await a.json();e(d)}catch(a){console.error("Error al obtener los clientes:",a)}finally{n(!1)}},m=async(e,n)=>{try{n(!0);const r=await fetch(`${g}boletas/boleta/${e}`,{method:"GET",headers:{Authorization:y.get("token")}});if(!r.ok)throw new Error("Error en la respuesta de la API");return await r.json()}catch(r){console.error("Error al obtener los clientes:",r)}finally{n(!1)}},oe=(e,n)=>{const r=(e==null?void 0:e.Socios)==-998?e==null?void 0:e.Cliente:e==null?void 0:e.Proveedor;console.log(e);const i={proceso:e==null?void 0:e.Proceso,idCliente:e==null?void 0:e.Socios,socio:r,idUsuario:y.get("token"),idMotorista:e==null?void 0:e.Motoristas,pesoInicial:e==null?void 0:e.pesoIn,idPlaca:e==null?void 0:e.Placa,idEmpresa:e==null?void 0:e.Transportes,...(e==null?void 0:e.Proceso)==0&&{idProducto:(e==null?void 0:e.Producto)||null,idMovimiento:(e==null?void 0:e.Movimiento)||null,...((e==null?void 0:e.Movimiento)==10||(e==null?void 0:e.Movimiento)==11)&&{idTrasladoOrigen:e["Traslado Origen"]},...(e==null?void 0:e.Movimiento)!=10&&(e==null?void 0:e.Movimiento)!=11&&{idOrigen:(e==null?void 0:e.Origen)||null},NSalida:(e==null?void 0:e.NSalida)||null,NViajes:e.NViajes||null,Nbodega:(e==null?void 0:e.Nbodega)||null,FechaPuerto:(e==null?void 0:e.FechaPuerto)||null,tolvaAsignada:(e==null?void 0:e.TolvaAsignada)||null,...(e==null?void 0:e.Movimiento)==2&&{sello1:n[0]||null,sello2:n[1]||null,sello3:n[2]||null,sello4:n[3]||null,sello5:n[4]||null,sello6:n[5]||null}}};return console.log(i),i},se=async e=>{try{const n=await fetch(`${g}boletas/stats`,{method:"GET",headers:{Authorization:y.get("token")}});if(!n.ok)throw new Error("Error en la respuesta de la API");const r=await n.json();e(r)}catch(n){console.error("Error al obtener los clientes:",n)}},ce=async(e,n,r,i)=>{const t=await m(n.Id,i),a=t.boletaType===3;r(t==null?void 0:t.movimiento),console.log(t),e(d=>{var s;return{...d,Socios:t.idSocio??(a?-998:-999),valueSocio:t==null?void 0:t.socio,Motoristas:t.idMotorista??t.motorista,Placa:t.placa,Proceso:t.proceso,Producto:t.idProducto,Movimiento:t.idMovimiento,Origen:t.idOrigen||t.origen,"Traslado origen":t.idTrasladoOrigen,Transportes:t.idEmpresa??t.empresa,Estado:0,pesoIn:t.pesoInicial,pesoOut:0,idBoleta:n.Id,tipoSocio:(s=t==null?void 0:t.clienteBoleta)==null?void 0:s.tipo}})},de=async(e,n)=>{try{const r=await fetch(`${g}boletas/${n}`,{method:"PUT",body:JSON.stringify(e),headers:{"Content-Type":"application/json",Authorization:y.get("token")}});if(!r.ok)throw new Error("Error en la respuesta de la API");const i=await r.json();if(r.ok)return i}catch(r){console.error("Error al obtener los datos:",r)}},ue=async(e,n)=>{try{n(!0);const r=await fetch(`${g}boletas/`,{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json",Authorization:y.get("token")}});if(!r.ok)throw new Error("Error en la respuesta de la API");const i=await r.json();console.log(i)}catch(r){console.error("Error al obtener los datos:",r)}finally{n(!1)}},le=async(e,n,r)=>{try{n(!0);const i=await fetch(`${g}boletas/historial/${e}?type=${r}`,{method:"GET",headers:{Authorization:y.get("token")}});if(!i.ok)throw new Error("Error en la respuesta de la API");return await i.json()}catch(i){console.error("Error al obtener los clientes:",i)}finally{setTimeout(()=>{n(!1)},2e3)}},pe=async(e,n)=>{try{n(!0);const r=await fetch(`${g}boletas/reimprimir/ticket?id=${e}`,{method:"GET",headers:{Authorization:y.get("token")}});if(!r.ok)throw new Error("Error en la respuesta de la API");return await r.json()}catch(r){console.error("Error al obtener los clientes:",r)}finally{setTimeout(()=>{n(!1)},2e3)}},he=async(e,n)=>{try{n(!0);const r=await fetch(`${g}boletas/cancelar/${e.Id}`,{method:"PUT",body:JSON.stringify(e),headers:{"Content-Type":"application/json",Authorization:y.get("token")}});if(!r.ok)throw new Error("Error en la respuesta de la API");const i=await r.json();if(r.ok)return i}catch(r){console.error("Error al obtener los datos:",r)}finally{n(!1)}},ve=async(e,n,r,i)=>{try{i(!0);const t=await fetch(`${g}boletas/calendario/mes?start=${n}&end=${r}`,{method:"GET",headers:{Authorization:y.get("token")}});if(!t.ok)throw new Error("Error en la respuesta de la API");const a=await t.json();e(a)}catch(t){console.error("Error al obtener los clientes:",t)}finally{i(!1)}},Pe=async(e,n,r)=>{try{r(!0);const i=await fetch(`${g}boletas/calendario/mes/detalles?fecha=${n}`,{method:"GET",headers:{Authorization:y.get("token")}});if(!i.ok)throw new Error("Error en la respuesta de la API");const t=await i.json();e(t)}catch(i){console.error("Error al obtener los clientes:",i)}finally{r(!1)}},ye=async()=>{try{const e=await fetch(`${g}boletas/config/tolerancia`,{method:"GET",headers:{Authorization:y.get("token")}});if(!e.ok)throw new Error("Error en la respuesta de la API");return await e.json()}catch(e){console.error("Error al obtener los clientes:",e)}},Ee=(e,n,r)=>{const i=Math.abs((e==null?void 0:e.pesoOut)-(e==null?void 0:e.pesoIn)),t=e["Peso Teorico"]?e["Peso Teorico"]*n:0,a=e["Peso Teorico"]?Math.abs(i)-e["Peso Teorico"]:0,d=e["Peso Teorico"]?Math.abs(Math.abs(i)-e["Peso Teorico"]):0,s=e["Peso Teorico"]?d>t:!1,o=r.slice(0,6).reduce((h,p,b)=>(h[`sello${b+1}`]=p,h),{}),w={idCliente:e==null?void 0:e.Socios,boletaType:e==null?void 0:e.Estado,manifiesto:e!=null&&e.Documento?e==null?void 0:e.Documento:0,ordenDeCompra:e["Orden de compra"]?e["Orden de compra"]:0,pesoTeorico:e["Peso Teorico"]?e["Peso Teorico"]:0,estado:s?"Completo(Fuera de tolerancia)":"Completado",idUsuario:y.get("token"),idMotorista:e==null?void 0:e.Motoristas,fechaFin:new Date,pesoFinal:e==null?void 0:e.pesoOut,idPlaca:e==null?void 0:e.Placa,idEmpresa:e==null?void 0:e.Transportes,idMovimiento:e==null?void 0:e.Movimiento,idProducto:e==null?void 0:e.Producto,observaciones:e==null?void 0:e.Observaciones,proceso:e==null?void 0:e.Proceso,idTrasladoOrigen:e["Traslado origen"],idTrasladoDestino:e["Traslado destino"],idOrigen:e==null?void 0:e.Origen,idDestino:e==null?void 0:e.Destino,ordenDeTransferencia:e["Orden de Transferencia"]||null,tipoSocio:e==null?void 0:e.tipoSocio,pesoNeto:i,desviacion:a,allSellos:o};return console.log(w),w},ge=(e,n,r,i)=>{const{idCliente:t,idUsuario:a,idMotorista:d,idPlaca:s,idEmpresa:o,pesoInicial:w,proceso:h,idMovimiento:p,idOrigen:b,idProducto:E,NViajes:c,NSalida:l,idTrasladoOrigen:T,tolvaAsignada:C,Nbodega:$,FechaPuerto:O}=n,v=A=>(e(!0),r(A),!1);if(!t||!a||!d||!s||!o)return v("Por favor, complete todos los campos antes de continuar. (Cliente, Motorista, Placa y Empresa)");if(h===0){if(!p||!E)return v("Por favor, complete todos los campos de detalles de entrada. (Movimiento, Producto)");const A=p===10||p===11;if(A&&!T)return v("Por favor, ingrese un origen de traslado.");if(!A&&!b)return v("Por favor, complete todos los campos de detalles de entrada. (Origen)")}if(E===18&&p===2){if(!l||!c)return v("Por favor, ingresar numero de viaje y de salida");if(isNaN(c)||c<=0)return v("El número de viajes debe ser un valor numérico positivo.");if(isNaN(l)||l<=0)return v("El número de salida debe ser un valor numérico positivo.");if(!C)return v("Por favor, ingresar una tolva de destino");if(!$)return v("Por favor, ingresar el # de bodega del puerto");if(!O)return v("Por favor, ingresar la fecha de salida del puerto")}return(t===-998||t===-999)&&!Y.test(s)?v("Placa inválida. Formatos válidos: Honduras (ABC1234 o C123456), El Salvador y Nicaragua (una letra seguida de 6 números, como M123456), Guatemala (123ABC o P123ABC)."):parseFloat(w)<=0?v("Por favor, el peso inicial no debe de ser menor o igual a 0"):p===2&&i.length===0?v("Las importaciones deben de llevar al menos 1 marchamo."):!0},we=(e,n,r,i)=>{const{idCliente:t,idDestino:a,idEmpresa:d,idMotorista:s,idMovimiento:o,idOrigen:w,idProducto:h,idTrasladoDestino:p,idTrasladoOrigen:b,manifiesto:E,ordenDeCompra:c,proceso:l,ordenDeTransferencia:T,pesoFinal:C}=n;return l==0&&parseFloat(i)<=parseFloat(C)&&o!=10&&o!=11?(r("Peso inicial debe ser mayor al peso final)"),e(!0),!1):l==1&&parseFloat(i)>=parseFloat(C)&&o!=13&&o!=12?(r("Peso final debe ser mayor al peso de inicio"),e(!0),!1):!t||!d||!s||!o||!h?(r("Por favor, ingresar todos los datos primer nivel: cliente, transporte, motorista, movimiento, producto"),e(!0),!1):(o==11||o==10)&&b==p?(r("traslado origen y destino deben de ser diferentes"),e(!0),!1):o!=11&&o!=10&&w==a?(r("origen y destino deben de ser diferentes"),e(!0),!1):l==0&&!c?(r("Por favor, ingresar todos los datos segundo nivel: orden de compra"),e(!0),!1):l==1&&!E?(r("Por favor, ingresar todos los datos tercer nivel: proceso, manifiesto"),e(!0),!1):(o==11||o==10)&&!T?(r("Por favor, ingresar todos los datos cuarto nivel: orden de transferencia"),e(!0),!1):parseFloat(C)<=0?(r("El peso final debe ser mayor que 0"),e(!0),!1):l==1&&!a&&o!=11&&o!=10||(o==11||o==10)&&(!p||!b)?(r("Ingrese todos los datos de direcciones."),e(!0),!1):!0},be=(e,n,r,i)=>{const{idCliente:t,idDestino:a,idEmpresa:d,idMotorista:s,idProducto:o,proceso:w,pesoFinal:h}=n;return w==1&&parseFloat(i)>=parseFloat(h)?(r("Peso final debe ser mayor al peso de inicio"),e(!0),!1):!t||!d||!s||!o||!a?(r("Por favor, ingresar todos los datos primer nivel: cliente, transporte, motorista, movimiento, producto, destino"),e(!0),!1):(console.log(n),parseFloat(h)<=0||parseFloat(i)<=0?(r("Los pesos deben ser diferente de 0"),e(!0),!1):!0)};export{re as A,Pe as a,ye as b,le as c,ne as d,ie as e,se as f,ve as g,ae as h,m as i,ce as j,oe as k,Ee as l,be as m,ue as n,pe as o,te as p,we as q,de as r,he as u,ge as v};

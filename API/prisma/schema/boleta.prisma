model Boleta {
    id Int @id @default(autoincrement())
    numBoleta Int?
    boletaType Int?
    idPlaca Int?
    placa String 
    idEmpresa Int?
    empresa String
    idSocio Int?
    socio String
    idProducto Int?
    producto String?
    proceso Int?
    idOrigen Int?
    origen String?
    idDestino Int?
    destino String?
    idTrasladoOrigen Int?
    trasladoOrigen String?
    idTrasladoDestino Int?
    trasladoDestino String? 
    idMovimiento Int?
    movimiento String?
    manifiesto Int?
    estado String 
    impreso DateTime?
    idUsuario Int 
    usuario String
    idMotorista Int?
    motorista String
    ordenDeCompra Int?
    ordenDeTransferencia Int?
    pesoTeorico Float? 
    pesoNeto Float?
    desviacion Float?
    observaciones String? @db.VarChar(255)
    pesoInicial Float
    pesoFinal Float?
    NSalida Int?
    Nviajes Int?
    fechaInicio DateTime
    fechaFin DateTime?
    porTolerancia Float?
    siloID Int?

    /* Relaciones dentro de la boleta */
    placasBoletas Vehiculo? @relation(fields: [idPlaca], references: [id], onDelete: NoAction, onUpdate: NoAction)
    despachador Usuarios @relation(fields: [idUsuario], references: [id])
    empresaBoleta Empresa? @relation(fields: [idEmpresa], references: [id], onDelete: NoAction, onUpdate: NoAction)
    clienteBoleta Socios? @relation(fields: [idSocio], references: [id])
    tipoDeProductoBoleta Producto? @relation(fields: [idProducto], references: [id])
    motoristaBoleta Motoristas? @relation(fields: [idMotorista], references: [id], onDelete: NoAction, onUpdate: NoAction)
    boletasMovimientos Movimientos? @relation(fields: [idMovimiento], references: [id])
    boletasXsilos Silos? @relation(fields: [siloID], references: [id], onDelete: NoAction, onUpdate: NoAction)
}